---
volumes:
  freezing-data:
    external: true
  beanstalkd-data:
    external: true
  nginx-config:
  nginx-certs:
  nginx-vhosts:
  nginx-webroot:

services:

  # The database is not expected to be part of this set of containers.
  #
  # You can either run this directly on the host or in a container by adding in
  # the docker-comopse.devsupport.yml file:
  #
  #  docker-compose -f docker-compose.yml -f docker-compose.devsupport.yml up

  # ----------------------------------------------------------------------------
  # Infrastructure containers
  # ----------------------------------------------------------------------------

  datadog:
    image: datadog/docker-dd-agent:latest
    hostname: dd-agent
    container_name: dd-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      API_KEY: ${DATADOG_API_KEY}
      SD_BACKEND: docker
    restart: unless-stopped
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: dd-agent

  beanstalkd:
    image: freezingsaddles/freezing-beanstalkd:${FREEZING_BEANSTALKD_TAG:-latest}  # yamllint disable-line rule:line-length
    hostname: beanstalkd
    container_name: beanstalkd
    volumes:
      - beanstalkd-data:/data
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: beanstalkd

  nginx:
    image: nginx:stable
    hostname: nginx
    container_name: nginx
    ports:
      - "80:80"
      - '443:443'
    volumes:
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
      - "com.github.nginx-proxy.nginx"
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: nginx

  nginx-letsencrypt:
    # Version 2.3 is the last compatible version,
    # sha256:04b98015574addfba886023892f5e0ed28c012e1e72b8b43079e006f7e2c54d0
    # specifically.
    # TODO: fix this with:
    # https://github.com/freezingsaddles/freezing-compose/issues/32
    image: jrcs/letsencrypt-nginx-proxy-companion:2.3
    container_name: nginx-letsencrypt
    hostname: nginx-letsencrypt
    # We don't need the environment since we're using labels.
    # environment:
    #   NGINX_DOCKER_GEN_CONTAINER: nginx-docker-gen
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: nginx-letsencrypt
    depends_on:
      - nginx

  nginx-docker-gen:
    image: jwilder/docker-gen
    container_name: nginx-docker-gen
    hostname: nginx-docker-gen
    command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf  # yamllint disable-line rule:line-length
    volumes:
      - './web/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: nginx-docker-gen

  # ----------------------------------------------------------------------------
  # Application Containers
  # ----------------------------------------------------------------------------

  freezing-sync:
    image: freezingsaddles/freezing-sync:${FREEZING_SYNC_TAG:-latest}
    hostname: freezing-sync
    container_name: freezing-sync
    depends_on:
      - beanstalkd
      - datadog
    environment:
      BEANSTALKD_HOST: ${BEANSTALKD_HOST:-beanstalkd}
      BEANSTALKD_PORT: ${BEANSTALKD_PORT:-11300}
      DATADOG_API_KEY: ${DATADOG_API_KEY}
      DATADOG_APP_KEY: ${DATADOG_APP_KEY}
      DATADOG_HOST: ${DATADOG_HOST:-datadog}
      DATADOG_PORT: ${DATADOG_PORT:-8125}
      DEBUG: ${DEBUG}
      END_DATE: ${END_DATE}
      ENVIRONMENT: ${ENVIRONMENT}
      MAIN_TEAM: ${MAIN_TEAM}
      OBSERVER_TEAMS: ${OBSERVER_TEAMS}
      SQLALCHEMY_SILENCE_UBER_WARNING: ${SQLALCHEMY_SILENCE_UBER_WARNING:-false}
      SQLALCHEMY_URL: ${SQLALCHEMY_URL}
      SQLALCHEMY_WARN_20: ${SQLALCHEMY_WARN_20:-true}
      START_DATE: ${START_DATE}
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      TEAMS: ${TEAMS}
      TIMEZONE: ${TIMEZONE:-America/New_York}
      VISUAL_CROSSING_API_KEY: ${VISUAL_CROSSING_API_KEY}
    volumes:
      - ./sync-data:/data
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: freezing-sync

  freezing-nq:
    image: freezingsaddles/freezing-nq:${FREEZING_NQ_TAG:-latest}
    hostname: freezing-nq
    container_name: freezing-nq
    environment:
      BEANSTALKD_HOST: ${BEANSTALKD_HOST:-beanstalkd}
      BEANSTALKD_PORT: ${BEANSTALKD_PORT:-11300}
      DEBUG: ${DEBUG}
      ENVIRONMENT: ${ENVIRONMENT}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_HOST: ${FREEZING_NQ_FQDN}
      STRAVA_VERIFY_TOKEN: ${STRAVA_VERIFY_TOKEN}
      VIRTUAL_HOST: ${FREEZING_NQ_FQDN}
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: freezing-nq
    depends_on:
      - beanstalkd

  freezing-web:
    image: freezingsaddles/freezing-web:${FREEZING_WEB_TAG:-latest}
    hostname: freezing-web
    container_name: freezing-web
    depends_on:
      - beanstalkd
    environment:
      BIND_INTERFACE: "0.0.0.0"
      COMPETITION_TITLE: ${COMPETITION_TITLE}
      DEBUG: ${DEBUG}
      END_DATE: ${END_DATE}
      ENVIRONMENT: ${ENVIRONMENT}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_HOST: ${FREEZING_WEB_FQDN}
      MAIN_TEAM: ${MAIN_TEAM}
      OBSERVER_TEAMS: ${OBSERVER_TEAMS}
      SECRET_KEY: ${SECRET_KEY}
      SQLALCHEMY_SILENCE_UBER_WARNING: ${SQLALCHEMY_SILENCE_UBER_WARNING:-false}
      SQLALCHEMY_URL: ${SQLALCHEMY_URL}
      SQLALCHEMY_WARN_20: ${SQLALCHEMY_WARN_20:-true}
      START_DATE: ${START_DATE}
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      TEAMS: ${TEAMS}
      TIMEZONE: ${TIMEZONE:-America/New_York}
      VIRTUAL_HOST: ${FREEZING_WEB_FQDN}
    volumes:
      - ./web-data:/data
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: freezing-web

  wordpress:
    image: wordpress:5.8.2
    container_name: wordpress
    volumes:
      - ./wordpress:/var/www/html
    restart: unless-stopped
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_HOST: ${FREEZING_REGISTER_FQDN}
      VIRTUAL_HOST: ${FREEZING_REGISTER_FQDN}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
    logging:
      driver: awslogs
      options:
        awslogs-group: logspout
        awslogs-stream: wordpress
